name: Publish Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      image:
        description: Docker image name (e.g. pessina/bitcoin-regtest)
        required: false
        default: pessina/bitcoin-regtest
      tag:
        description: Docker image tag (e.g. latest or v1.0.0)
        required: false
        default: latest
      npm_version:
        description: Optional npm package version to tag (falls back to package version)
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: pessina/bitcoin-regtest
      IMAGE_TAG: ${{ github.sha }}
      OCI_VERSION: ""
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    outputs:
      image-name: ${{ steps.vars.outputs.image-name }}
      image-tag: ${{ steps.vars.outputs.image-tag }}
      oci-version: ${{ steps.vars.outputs.oci-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Resolve inputs
        id: vars
        run: |
          IMAGE_NAME="pessina/bitcoin-regtest"
          IMAGE_TAG="${GITHUB_SHA}"
          OCI_VERSION=""

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ -n "${{ github.event.inputs.image }}" ]]; then
              IMAGE_NAME="${{ github.event.inputs.image }}"
            fi
            if [[ -n "${{ github.event.inputs.tag }}" ]]; then
              IMAGE_TAG="${{ github.event.inputs.tag }}"
            fi
            if [[ -n "${{ github.event.inputs.npm_version }}" ]]; then
              OCI_VERSION="${{ github.event.inputs.npm_version }}"
            fi
          fi

          echo "image-name=${IMAGE_NAME}" >> "$GITHUB_OUTPUT"
          echo "image-tag=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
          echo "oci-version=${OCI_VERSION}" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> "$GITHUB_ENV"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> "$GITHUB_ENV"
          echo "OCI_VERSION=${OCI_VERSION}" >> "$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag
            type=ref,event=branch
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ env.OCI_VERSION }}

      - name: Log in to Docker Hub
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output image reference
        run: |
          echo "Published image(s):"
          echo "${{ steps.meta.outputs.tags }}"
