name: Publish Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      image:
        description: Docker image name (e.g. pessina/bitcoin-regtest)
        required: false
        default: pessina/bitcoin-regtest
      tag:
        description: Docker image tag (e.g. latest or v1.0.0)
        required: false
        default: latest
      npm_version:
        description: Optional npm package version to tag (falls back to package version)
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: pessina/bitcoin-regtest
      IMAGE_TAG: ${{ github.sha }}
      OCI_VERSION: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Apply workflow_dispatch inputs
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          if [ -n "${{ github.event.inputs.image }}" ]; then
            echo "IMAGE_NAME=${{ github.event.inputs.image }}" >> "$GITHUB_ENV"
          fi
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "IMAGE_TAG=${{ github.event.inputs.tag }}" >> "$GITHUB_ENV"
          fi
          if [ -n "${{ github.event.inputs.npm_version }}" ]; then
            echo "OCI_VERSION=${{ github.event.inputs.npm_version }}" >> "$GITHUB_ENV"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag
            type=ref,event=branch
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ env.OCI_VERSION }}

      - name: Log in to Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output image reference
        run: |
          echo "Published image(s):"
          echo "${{ steps.meta.outputs.tags }}"
